<?xml version="1.0" encoding="UTF-8"?>
<sword-configuration>
	<server-info>
		<server-name name="myserver_zjx" type="server" nodeName=""
			memo="系统的服务器名获取顺序：1.weblogic的config.xml配置的服务器名，2.sword.server.name环境变化的值，3.此参数值" />
		<rack-id id="myrack" memo="机架ID，用于支持机架感知" />
		<!-- <jmx-server port="9001"/> -->
		<!-- <running-model model="product" memo="生产模式，在此模式下会自动跳过很多的校验和提示"/> <running-model 
			model="test" memo="测试模式，在此模式下会自动跳过很多的校验和提示"/> -->
		<running-model model="develop" memo="开发模式，在此模式下会进行最严格的校验，以保证其它模式的正确运行" />
		<log showSessionID="false" showServiceCallInfo="true" />
		<!-- charset defaultCharset="UTF-8" / -->
		<!-- zipAltEncoding name="sun.zip.altEncoding" charset="GBK" / -->
		<!-- message startupSuccess="" startupError="" stopMessage="" / -->
	</server-info>

	<biz-exception-filter package="gov.gt3"
		defaultPlatformMessageCode="1019900000001" defaultDomainMessageCode=""
		maxExceptionCount="1" memo="业务异常过滤配置，用于过滤业务异常堆栈信息" excludes="" />

	<service generate-type="startup" asyncServiceParallel="5"
		maxAsyncServiceParallel="5" maxServiceCallLevel="150"
		checkSerializable="true" checkNotThrowException="true"
		forcedCacheResult="false" valueCacheSize="10" useDistributedCache="false"
		valueCacheTimeout="0" singleMode="true" useIoC="true" simulation="false"
		memo="服务组件配置信息:generate-type属性用于控制服务代理类的生成时机，startup表示服务器启动时生成，其它值表示首次调用时生成，
				maxServiceCallLevel表示允许的最大服务嵌套调用深度">
		<!--filter name="" beforeFilter="" afterFilter="" exceptionFilter=""/ -->
		<!--filter name="" facadeFilter="" / -->
	</service>

	<platform-event memo="平台事件配置">
		<class-scanner extensionsLibs="" applicationLibs=""
			inclusionJars="(sword.+\.jar)" inclusionClasses=".+" memo="类扫描框架配置">
			<scanner annotation="BeanScanner"
				scanner="com.css.sword.core.components.ioc.guice.BeanScanner" memo="Google Guice IoC扫描器" />
			<scanner annotation="CtrlClassScanner"
				scanner="com.css.sword.web.component.SwordCtrlScanner" memo="Web框架Ctrl类扫描器" />

			<!-- <scanner annotation="ClusterCommunicationEventListenerScanner" scanner="com.css.sword.clusterCommunication.SwordClusterCommunicationManagger" 
				memo="集群事件监听器扫描器"/> -->
		</class-scanner>

		<started memo="平台启动完成事件处理器">
			<!-- <listener listener="com.css.sword.manger.listener.CommandLineListener" 
				memo="平台命令行监听器"/> <listener listener="gov.gt3.hxzg.checker.zsj.ZsjSyncChecker" 
				memo="主数据版本同步检查器"/> -->
		</started>

		<!-- <stop memo="平台停止开始事件处理器"> <listener listener="com.css.sword.test.event.TestStopListener" 
			abc="2" /> </stop> -->
	</platform-event>

	<components
		memo="组件加载顺序：数据元组件、服务管理组件、事务处理监控组件、NoSQL组件、动态脚本引擎管理组件、性能监控组件、多级缓存组件、
				集群通信组件、持久层组件、服务中介管理组件、缓存数据管理组件、工作流组件、定时任务组件、单元测试数据收集器、
				系统管理组件(最后加载)">

		<component name="SwordPersistenceManager"
			component="com.css.sword.core.components.persistence.component.SwordPersistenceComponentManager"
			memo="Sword持久化组件" />

		<!-- <component name="SwordIoCManager" component="com.css.sword.ioc.spring.SwordIoCManager" 
			memo="Spring IoC组件"/> <component name="SwordNoSQLComponentManaer" component="com.css.sword.nosql.SwordNoSQLComponentManager" 
			defaultDsName="a" memo="NoSQL组件"/> <component name="SwordScriptEngineComponentManager" 
			component="com.css.sword.script.SwordScriptEngineComponentManager" memo="动态脚本引擎管理组件"/> 
			<component name="SwordPerformanceComponent" component="com.css.sword.kernel.platform.component.performance.PerformanceManager" 
			runstate="stop" servicePattern=".+" maxTimeOut="50ms" bufferSize="1024" memo="性能监控组件：用于采集、处理系统运行中的性能信息"/> -->

		<!-- <component name="SwordMultiLevelCacheComponent" component="com.css.sword.multiLevelCache.SwordCacheComponentManager" 
			memo="多级数据缓存组件：用于提供多级数所缓存功能，支持透明同类型缓存产品切换"/> <component name="SwordClusterCommunicationComponentManager" 
			component="com.css.sword.clusterCommunication.SwordClusterCommunicationComponentManager" 
			cluster-name="mycluster" memo="集群通信组件：用于提供应用集的集群内通信功能，为系统管理等功能提供基础支撑" /> -->

		<!-- 持久层debug配置项日志说明：不加、或值为空或值为off时不输出持久层调试日志，值为sql时显示执行的sql，值为on或detail时显示更详细的调试信息 
			所有的调试日志都是log4j的info级别 -->
		<!-- <component name="PersistenceComponentManager" component="com.css.sword.persistence.component.SwordPersistenceComponentManager" 
			debug="detail" defaultDsName="sworddev" useCachedRowSet="true" useQueryCache="false" 
			quickClose="false" useMemoryCache="false" transactionalCache="false" warningMoreThanFieldCount="-1" 
			defaultFetchSize="" defaultMaxRow="0" filter="" dataEncrypter="" dataDecrypter="" 
			memo="持久层组件：与数据元结构，提供数据持久化功能，并提供数据访问审计功能" /> <component name="MediationComponentManager" 
			refreshCapacity="1" queryRemoteRouteInfo="start" component="com.css.sword.mediation.sender.component.MediationComponentManager" 
			memo="服务中介管理组件：提供服务的全域路由支持"/> -->

		<!-- <component name="SwordSequenceManager" component="com.css.sword.billcode.manager.SwordSequenceManager" 
			provider="oracle" datasource="sworddev" cacheInfo="true" syncWrite="false" 
			autoRollback="true" autoRollbackOnStartup="true" memo="单据号管理组件：用于提供应用单据号的管理"/> -->

		<!-- <component name="SwordCacheDataManager" component="com.css.sword.multiLevelCache.SwordCacheDataManager" 
			lazyload="true" default_ds_name="" memo="缓存数据管理组件：用于管理各缓存组件的数据加载" /> <component 
			name="WorkFlowInitManager" component="com.css.sword.extensions.workflow.adapter.engine.WorkFlowInitManager" 
			default_ds_name="workflowdev" memo="工作流组件：用于支持工作流组件"/> <component name="schedulerManager" 
			component="com.css.sword.scheduler.SwordSchedulerManager" memo="定时任务组件：用于支持定时触发服务操作"/> 
			<component name="SwordServiceTestDataCollectorManager" component="com.css.sword.unitTest.collector.SwordServiceTestDataCollectorManager" 
			serviceNamePattern = "*" collect-mode="All" memo="单元测试框架测试数据收集组件，支持First、Last和All三种测试数据收集模式"/> 
			<component name="SwordManagerComponentManager" component="com.css.sword.manger.SwordManagerComponentManager" 
			memo="系统管理组件，提供底层平台的运行时管理功能" /> -->
	</components>
	<!-- <hotswap name="SwordHotSwapManager" defaultCheckCapacity="10" independence="SwordCacheDataManager#10" 
		memo="平台热部署管理器，检查周期单位为(秒)，缺省为60秒" /> -->
</sword-configuration>